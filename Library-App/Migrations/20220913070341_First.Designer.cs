// <auto-generated />
using System;
using Library_App.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library_App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220913070341_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library_App.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Examples")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "JK Rowling",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                            Examples = 5,
                            Title = "Harry Potter 1"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "JK Rowling",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                            Examples = 6,
                            Title = "Harry Potter 2"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "JRR Tolkien",
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                            Examples = 4,
                            Title = "The fellowship of the ring"
                        });
                });

            modelBuilder.Entity("Library_App.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            EMail = "ErikNorell@gmail.com",
                            FirstName = "Erik",
                            LastName = "Norell"
                        },
                        new
                        {
                            CustomerId = 2,
                            EMail = "ViktorGunnarsson@gmail.com",
                            FirstName = "Viktor",
                            LastName = "Gunnarsson"
                        },
                        new
                        {
                            CustomerId = 3,
                            EMail = "LukasRose@gmail.com",
                            FirstName = "Lukas",
                            LastName = "Rose"
                        });
                });

            modelBuilder.Entity("Library_App.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            LoanId = 1,
                            BookId = 1,
                            CustomerId = 1,
                            LoanDate = new DateTime(2022, 9, 13, 9, 3, 41, 112, DateTimeKind.Local).AddTicks(379),
                            ReturnDate = new DateTime(2022, 10, 13, 9, 3, 41, 115, DateTimeKind.Local).AddTicks(3221)
                        },
                        new
                        {
                            LoanId = 2,
                            BookId = 1,
                            CustomerId = 2,
                            LoanDate = new DateTime(2022, 9, 13, 9, 3, 41, 115, DateTimeKind.Local).AddTicks(4224),
                            ReturnDate = new DateTime(2022, 10, 13, 9, 3, 41, 115, DateTimeKind.Local).AddTicks(4249)
                        },
                        new
                        {
                            LoanId = 3,
                            BookId = 2,
                            CustomerId = 3,
                            LoanDate = new DateTime(2022, 9, 13, 9, 3, 41, 115, DateTimeKind.Local).AddTicks(4296),
                            ReturnDate = new DateTime(2022, 10, 13, 9, 3, 41, 115, DateTimeKind.Local).AddTicks(4301)
                        });
                });

            modelBuilder.Entity("Library_App.Models.Loan", b =>
                {
                    b.HasOne("Library_App.Models.Book", "book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_App.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
